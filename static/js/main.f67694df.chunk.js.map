{"version":3,"sources":["components/Card/Card.jsx","components/Skeletons/SkeletonCard.js","components/CardList/CardList.jsx","components/SearchBox/SearchBox.jsx","components/CardList/CardListContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Card","bosse","className","alt","name","src","id","email","SkeletonCard","Skeleton","variant","width","style","marginBottom","height","CartList","bosses","contentHtml","length","map","SearchBox","type","placeholder","handleChange","onChange","CardListContainer","useState","setBosses","searchField","setSearchField","filterBosses","filter","toLowerCase","includes","toLocaleLowerCase","console","log","useEffect","setTimeout","fetch","then","response","json","value","target","CardList","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAoBeA,EAjBF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAKF,EAAMG,KACXC,IAAG,+BAA0BJ,EAAMK,GAAhC,eAEL,6BACGL,EAAMG,OAET,4BACGH,EAAMM,UAT0BN,EAAMK,K,gBCUhCE,EAXM,WAGnB,OACE,gCACE,cAACC,EAAA,EAAD,CAAUC,QAAQ,OAAOC,MAAO,IAAKC,MAAO,CAAEC,aAAc,MAC5D,cAACJ,EAAA,EAAD,CAAUC,QAAQ,OAAOC,MAAO,IAAKG,OAAQ,UCkBpCC,EAvBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EACc,IAAlBD,EAAOE,OACL,CAAC,EAAE,EAAE,EAAE,EAAE,GAAGC,KAAI,kBACd,cAAC,EAAD,OAGFH,EAAOG,KAAI,SAAAlB,GAAK,OACd,cAAC,EAAD,CAAMA,MAAOA,GAAYA,EAAMK,OAMrC,MAAO,CACL,qBAAKJ,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACGe,QCNMG,G,MAbG,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACtC,OACE,qBAAKrB,UAAU,aAAf,SACE,uBACEA,UAAU,SACVmB,KAAMA,EACNC,YAAaA,EACbE,SAAUD,QC4BHE,EAlCW,WACxB,MAA8BC,mBAAS,IAAvC,mBAAQV,EAAR,KAAgBW,EAAhB,KACA,EAAwCD,mBAAS,IAAjD,mBAAQE,EAAR,KAAqBC,EAArB,KAEMC,EAAe,WACnB,OAAOd,EAAOe,QAAO,SAAC9B,GAAD,OAAWA,EAAMG,KAAK4B,cAAcC,SAASL,EAAYM,yBAqBhF,OAdAC,QAAQC,IAAI,CACVA,IAAK,SACLpB,OAAQA,EACRc,aAAcA,MAGhBO,qBAAU,WACRC,YAAW,WACTC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAxB,GAAM,OAAIW,EAAUX,QAC1B,OACF,IAEK,CACL,oBAAId,UAAU,QAAd,4BACA,cAAC,EAAD,CAAWmB,KAAM,SAAUC,YAAa,aAAcC,aAAc,gBApBhDoB,EAoBmDC,EAAH,EAAGA,OAAH,OApBhDD,EAoB6EC,EAAOD,WAnBxGd,EAAec,MAoBf,cAACE,EAAD,CAAU7B,OAAQc,QCrBPgB,G,MAPH,WAEV,OACE,cAAC,EAAD,MCIWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f67694df.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.css'\r\n\r\nconst Card = ({ bosse }) => {\r\n  return (\r\n    <div className='card-container' key={bosse.id}>\r\n      <img \r\n        alt={bosse.name} \r\n        src={`https://robohash.org/${bosse.id}?set=set2`} \r\n      />\r\n      <h1> \r\n        {bosse.name}\r\n      </h1>\r\n      <p>\r\n        {bosse.email}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport './skeleton.css'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\n\r\nconst SkeletonCard = () => {\r\n  // const classes = `skeleton ${type}` \r\n  // <div className={classes}></div>\r\n  return (\r\n    <div>\r\n      <Skeleton variant=\"text\" width={185} style={{ marginBottom: 18 }} />\r\n      <Skeleton variant=\"rect\" width={185} height={185} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SkeletonCard\r\n","import React from 'react'\r\nimport './cardList.css'\r\nimport Card from '../Card/Card'\r\nimport SkeletonCard from '../Skeletons/SkeletonCard'\r\n\r\nconst CartList = ({ bosses }) => {\r\n  const contentHtml = (\r\n    bosses.length === 0 ? (\r\n      [1,2,3,4,5].map(() => (\r\n        <SkeletonCard />\r\n      ))\r\n    ) : (\r\n      bosses.map(bosse => (\r\n        <Card bosse={bosse} key={bosse.id} />\r\n      ))\r\n    )\r\n    \r\n  )\r\n\r\n  return [\r\n    <div className='App'>\r\n      <div className='card-list'>\r\n        {contentHtml}\r\n      </div>\r\n    </div>\r\n  ]\r\n}\r\n\r\nexport default CartList\r\n","import React from 'react'\r\nimport './searchBox.css'\r\n\r\nconst SearchBox = ({ type, placeholder, handleChange }) => {\r\n  return (\r\n    <div className=\"search-box\">\r\n      <input \r\n        className=\"search\"\r\n        type={type}\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React, { useState, useEffect } from 'react'\r\nimport CardList from './CardList'\r\nimport SearchBox from '../SearchBox/SearchBox'\r\n\r\nconst CardListContainer = () => {\r\n  const [ bosses, setBosses ] = useState([])\r\n  const [ searchField, setSearchField ] = useState('')\r\n\r\n  const filterBosses = () => {\r\n    return bosses.filter((bosse) => bosse.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\r\n  } \r\n\r\n  const handleChange = (value) => {\r\n    setSearchField(value)\r\n  }\r\n\r\n  console.log({\r\n    log: 'bosses',\r\n    bosses: bosses,\r\n    filterBosses: filterBosses()\r\n  })\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(bosses => setBosses(bosses))\r\n    },300)\r\n  },[])\r\n  \r\n  return [\r\n    <h1 className=\"title\">Bosses Rolodex</h1>,\r\n    <SearchBox type={'search'} placeholder={'Search box'} handleChange={({ target }) => handleChange(target.value) } />,\r\n    <CardList bosses={filterBosses()}/>\r\n  ]\r\n\r\n}\r\n\r\nexport default CardListContainer\r\n","import React from 'react'\r\nimport CardListContainer from './components/CardList/CardListContainer'\r\n\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  \r\n  return (\r\n    <CardListContainer />\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}